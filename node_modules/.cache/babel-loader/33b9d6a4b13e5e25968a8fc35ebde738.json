{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\team\\\\Documents\\\\GitHub\\\\goit-react-hw-01-component\\\\src\\\\components\\\\FriendList\\\\FriendList.jsx\";\nimport PropTypes from 'prop-types';\nimport './friends-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"friend\",\n    children: friends.map(_ref2 => {\n      let {\n        id,\n        avatar,\n        name,\n        isOnline\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status ${isOnline ? 'online' : 'offline'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"avatar\",\n          src: avatar,\n          alt: \"User avatar\",\n          width: \"48\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })).isRequired\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/team/Documents/GitHub/goit-react-hw-01-component/src/components/FriendList/FriendList.jsx"],"names":["PropTypes","FriendList","friends","map","id","avatar","name","isOnline","propTypes","arrayOf","shape","oneOfType","string","number","isRequired","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACzC,sBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,MAAN;AAAcC,QAAAA,IAAd;AAAoBC,QAAAA;AAApB,OAAD;AAAA,0BACX;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE;AAAM,UAAA,SAAS,EAAG,UAASA,QAAQ,GAAG,QAAH,GAAc,SAAU;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,EAAEF,MAA7B;AAAqC,UAAA,GAAG,EAAC,aAAzC;AAAuD,UAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAA0BF,EAA1B;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZM;KAAMH,U;AAcbA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,OAAO,EAAEF,SAAS,CAACS,OAAV,CACPT,SAAS,CAACU,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEJ,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACY,MAAX,EAAmBZ,SAAS,CAACa,MAA7B,CAApB,EAA0DC,UADhD;AAEdT,IAAAA,MAAM,EAAEL,SAAS,CAACY,MAFJ;AAGdN,IAAAA,IAAI,EAAEN,SAAS,CAACY,MAAV,CAAiBE,UAHT;AAIdP,IAAAA,QAAQ,EAAEP,SAAS,CAACe,IAAV,CAAeD;AAJX,GAAhB,CADO,EAOPA;AARmB,CAAvB;AAWA,eAAeb,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './friends-list.css';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className=\"friend\">\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <li className=\"item\" key={id}>\r\n          <span className={`status ${isOnline ? 'online' : 'offline'}`}></span>\r\n          <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n          <p className=\"name\">{name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n"]},"metadata":{},"sourceType":"module"}